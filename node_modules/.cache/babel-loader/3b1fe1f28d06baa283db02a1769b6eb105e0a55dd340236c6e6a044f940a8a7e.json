{"ast":null,"code":"var _jsxFileName = \"E:\\\\crypto-poly-front\\\\src\\\\components\\\\WalletConnect.jsx\";\nimport React from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WalletConnect({\n  setWallet\n}) {\n  const connectWallet = async () => {\n    if (!window.ethereum) return alert(\"Please install MetaMask!\");\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = await provider.getSigner();\n      const address = await signer.getAddress();\n      setWallet(address);\n      alert(`Connected: ${address}`);\n    } catch (err) {\n      console.error(err);\n      alert(\"Wallet connection failed!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: connectWallet,\n    className: \"bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700\",\n    children: \"Connect Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = WalletConnect;\nvar _c;\n$RefreshReg$(_c, \"WalletConnect\");","map":{"version":3,"names":["React","ethers","jsxDEV","_jsxDEV","WalletConnect","setWallet","connectWallet","window","ethereum","alert","provider","BrowserProvider","send","signer","getSigner","address","getAddress","err","console","error","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/crypto-poly-front/src/components/WalletConnect.jsx"],"sourcesContent":["import React from \"react\";\nimport { ethers } from \"ethers\";\n\nexport default function WalletConnect({ setWallet }) {\n  const connectWallet = async () => {\n    if (!window.ethereum) return alert(\"Please install MetaMask!\");\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = await provider.getSigner();\n      const address = await signer.getAddress();\n      setWallet(address);\n      alert(`Connected: ${address}`);\n    } catch (err) {\n      console.error(err);\n      alert(\"Wallet connection failed!\");\n    }\n  };\n\n  return (\n    <button\n      onClick={connectWallet}\n      className=\"bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700\"\n    >\n      Connect Wallet\n    </button>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,aAAaA,CAAC;EAAEC;AAAU,CAAC,EAAE;EACnD,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE,OAAOC,KAAK,CAAC,0BAA0B,CAAC;IAE9D,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIT,MAAM,CAACU,eAAe,CAACJ,MAAM,CAACC,QAAQ,CAAC;MAC5D,MAAME,QAAQ,CAACE,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MAC9C,MAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACI,SAAS,CAAC,CAAC;MACzC,MAAMC,OAAO,GAAG,MAAMF,MAAM,CAACG,UAAU,CAAC,CAAC;MACzCX,SAAS,CAACU,OAAO,CAAC;MAClBN,KAAK,CAAC,cAAcM,OAAO,EAAE,CAAC;IAChC,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBR,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,oBACEN,OAAA;IACEiB,OAAO,EAAEd,aAAc;IACvBe,SAAS,EAAC,mEAAmE;IAAAC,QAAA,EAC9E;EAED;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb;AAACC,EAAA,GAzBuBvB,aAAa;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}