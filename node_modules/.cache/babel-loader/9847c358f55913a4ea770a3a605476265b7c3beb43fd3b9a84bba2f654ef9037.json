{"ast":null,"code":"import { ethers } from \"ethers\";\nconst connectWallet = async () => {\n  if (window.ethereum) {\n    const provider = new ethers.BrowserProvider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n    console.log(\"Wallet connected:\", await signer.getAddress());\n  } else {\n    alert(\"Please install MetaMask or another wallet!\");\n  }\n};","map":{"version":3,"names":["ethers","connectWallet","window","ethereum","provider","BrowserProvider","send","signer","getSigner","console","log","getAddress","alert"],"sources":["E:/crypto-poly-front/src/components/WalletConnect.jsx"],"sourcesContent":["import { ethers } from \"ethers\";\n\nconst connectWallet = async () => {\n  if (window.ethereum) {\n    const provider = new ethers.BrowserProvider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n    console.log(\"Wallet connected:\", await signer.getAddress());\n  } else {\n    alert(\"Please install MetaMask or another wallet!\");\n  }\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAE/B,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAIC,MAAM,CAACC,QAAQ,EAAE;IACnB,MAAMC,QAAQ,GAAG,IAAIJ,MAAM,CAACK,eAAe,CAACH,MAAM,CAACC,QAAQ,CAAC;IAC5D,MAAMC,QAAQ,CAACE,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;IAC9C,MAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACI,SAAS,CAAC,CAAC;IACzCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,MAAMH,MAAM,CAACI,UAAU,CAAC,CAAC,CAAC;EAC7D,CAAC,MAAM;IACLC,KAAK,CAAC,4CAA4C,CAAC;EACrD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}